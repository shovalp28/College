//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace College.CollegeWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CollegeSoap", Namespace="http://tempuri.org/")]
    public partial class College : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetSessionIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback Send_Sms_msgOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStudentMobileByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback StudentIdNumberExistOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLecturerMobileByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback LecturerIdNumberExistOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCollegeLogoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidIdNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStudentsNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStudentsTimeTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLecturerNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLecturerTimeTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStudentsInLessonOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveStudentAttendOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelStudentAttendOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveStudentHealthStatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback StudentHasHealthStatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveLecturerHealthStatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback LecturerHasHealthStatementOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public College() {
            this.Url = global::College.Properties.Settings.Default.College_CollegeWS_College;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetSessionIdCompletedEventHandler GetSessionIdCompleted;
        
        /// <remarks/>
        public event Send_Sms_msgCompletedEventHandler Send_Sms_msgCompleted;
        
        /// <remarks/>
        public event GetStudentMobileByIdCompletedEventHandler GetStudentMobileByIdCompleted;
        
        /// <remarks/>
        public event StudentIdNumberExistCompletedEventHandler StudentIdNumberExistCompleted;
        
        /// <remarks/>
        public event GetLecturerMobileByIdCompletedEventHandler GetLecturerMobileByIdCompleted;
        
        /// <remarks/>
        public event LecturerIdNumberExistCompletedEventHandler LecturerIdNumberExistCompleted;
        
        /// <remarks/>
        public event GetCollegeLogoCompletedEventHandler GetCollegeLogoCompleted;
        
        /// <remarks/>
        public event ValidIdNumberCompletedEventHandler ValidIdNumberCompleted;
        
        /// <remarks/>
        public event GetStudentsNameCompletedEventHandler GetStudentsNameCompleted;
        
        /// <remarks/>
        public event GetStudentsTimeTableCompletedEventHandler GetStudentsTimeTableCompleted;
        
        /// <remarks/>
        public event GetLecturerNameCompletedEventHandler GetLecturerNameCompleted;
        
        /// <remarks/>
        public event GetLecturerTimeTableCompletedEventHandler GetLecturerTimeTableCompleted;
        
        /// <remarks/>
        public event GetStudentsInLessonCompletedEventHandler GetStudentsInLessonCompleted;
        
        /// <remarks/>
        public event SaveStudentAttendCompletedEventHandler SaveStudentAttendCompleted;
        
        /// <remarks/>
        public event DelStudentAttendCompletedEventHandler DelStudentAttendCompleted;
        
        /// <remarks/>
        public event SaveStudentHealthStatementCompletedEventHandler SaveStudentHealthStatementCompleted;
        
        /// <remarks/>
        public event StudentHasHealthStatementCompletedEventHandler StudentHasHealthStatementCompleted;
        
        /// <remarks/>
        public event SaveLecturerHealthStatementCompletedEventHandler SaveLecturerHealthStatementCompleted;
        
        /// <remarks/>
        public event LecturerHasHealthStatementCompletedEventHandler LecturerHasHealthStatementCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSessionId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSessionId(int slg_cust_id, string AppID, string Pwd, int User_No, bool Sql_local_ip) {
            object[] results = this.Invoke("GetSessionId", new object[] {
                        slg_cust_id,
                        AppID,
                        Pwd,
                        User_No,
                        Sql_local_ip});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSessionIdAsync(int slg_cust_id, string AppID, string Pwd, int User_No, bool Sql_local_ip) {
            this.GetSessionIdAsync(slg_cust_id, AppID, Pwd, User_No, Sql_local_ip, null);
        }
        
        /// <remarks/>
        public void GetSessionIdAsync(int slg_cust_id, string AppID, string Pwd, int User_No, bool Sql_local_ip, object userState) {
            if ((this.GetSessionIdOperationCompleted == null)) {
                this.GetSessionIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSessionIdOperationCompleted);
            }
            this.InvokeAsync("GetSessionId", new object[] {
                        slg_cust_id,
                        AppID,
                        Pwd,
                        User_No,
                        Sql_local_ip}, this.GetSessionIdOperationCompleted, userState);
        }
        
        private void OnGetSessionIdOperationCompleted(object arg) {
            if ((this.GetSessionIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSessionIdCompleted(this, new GetSessionIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Send_Sms_msg", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Send_Sms_msg(string Sesid, string Cell_no, string Msg) {
            object[] results = this.Invoke("Send_Sms_msg", new object[] {
                        Sesid,
                        Cell_no,
                        Msg});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Send_Sms_msgAsync(string Sesid, string Cell_no, string Msg) {
            this.Send_Sms_msgAsync(Sesid, Cell_no, Msg, null);
        }
        
        /// <remarks/>
        public void Send_Sms_msgAsync(string Sesid, string Cell_no, string Msg, object userState) {
            if ((this.Send_Sms_msgOperationCompleted == null)) {
                this.Send_Sms_msgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSend_Sms_msgOperationCompleted);
            }
            this.InvokeAsync("Send_Sms_msg", new object[] {
                        Sesid,
                        Cell_no,
                        Msg}, this.Send_Sms_msgOperationCompleted, userState);
        }
        
        private void OnSend_Sms_msgOperationCompleted(object arg) {
            if ((this.Send_Sms_msgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Send_Sms_msgCompleted(this, new Send_Sms_msgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStudentMobileById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetStudentMobileById(string sesId, string idNumber) {
            object[] results = this.Invoke("GetStudentMobileById", new object[] {
                        sesId,
                        idNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStudentMobileByIdAsync(string sesId, string idNumber) {
            this.GetStudentMobileByIdAsync(sesId, idNumber, null);
        }
        
        /// <remarks/>
        public void GetStudentMobileByIdAsync(string sesId, string idNumber, object userState) {
            if ((this.GetStudentMobileByIdOperationCompleted == null)) {
                this.GetStudentMobileByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStudentMobileByIdOperationCompleted);
            }
            this.InvokeAsync("GetStudentMobileById", new object[] {
                        sesId,
                        idNumber}, this.GetStudentMobileByIdOperationCompleted, userState);
        }
        
        private void OnGetStudentMobileByIdOperationCompleted(object arg) {
            if ((this.GetStudentMobileByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStudentMobileByIdCompleted(this, new GetStudentMobileByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StudentIdNumberExist", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool StudentIdNumberExist(string sesId, string idNumber) {
            object[] results = this.Invoke("StudentIdNumberExist", new object[] {
                        sesId,
                        idNumber});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void StudentIdNumberExistAsync(string sesId, string idNumber) {
            this.StudentIdNumberExistAsync(sesId, idNumber, null);
        }
        
        /// <remarks/>
        public void StudentIdNumberExistAsync(string sesId, string idNumber, object userState) {
            if ((this.StudentIdNumberExistOperationCompleted == null)) {
                this.StudentIdNumberExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStudentIdNumberExistOperationCompleted);
            }
            this.InvokeAsync("StudentIdNumberExist", new object[] {
                        sesId,
                        idNumber}, this.StudentIdNumberExistOperationCompleted, userState);
        }
        
        private void OnStudentIdNumberExistOperationCompleted(object arg) {
            if ((this.StudentIdNumberExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StudentIdNumberExistCompleted(this, new StudentIdNumberExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLecturerMobileById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLecturerMobileById(string sesId, string idNumber) {
            object[] results = this.Invoke("GetLecturerMobileById", new object[] {
                        sesId,
                        idNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLecturerMobileByIdAsync(string sesId, string idNumber) {
            this.GetLecturerMobileByIdAsync(sesId, idNumber, null);
        }
        
        /// <remarks/>
        public void GetLecturerMobileByIdAsync(string sesId, string idNumber, object userState) {
            if ((this.GetLecturerMobileByIdOperationCompleted == null)) {
                this.GetLecturerMobileByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLecturerMobileByIdOperationCompleted);
            }
            this.InvokeAsync("GetLecturerMobileById", new object[] {
                        sesId,
                        idNumber}, this.GetLecturerMobileByIdOperationCompleted, userState);
        }
        
        private void OnGetLecturerMobileByIdOperationCompleted(object arg) {
            if ((this.GetLecturerMobileByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLecturerMobileByIdCompleted(this, new GetLecturerMobileByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LecturerIdNumberExist", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool LecturerIdNumberExist(string sesId, string idNumber) {
            object[] results = this.Invoke("LecturerIdNumberExist", new object[] {
                        sesId,
                        idNumber});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void LecturerIdNumberExistAsync(string sesId, string idNumber) {
            this.LecturerIdNumberExistAsync(sesId, idNumber, null);
        }
        
        /// <remarks/>
        public void LecturerIdNumberExistAsync(string sesId, string idNumber, object userState) {
            if ((this.LecturerIdNumberExistOperationCompleted == null)) {
                this.LecturerIdNumberExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLecturerIdNumberExistOperationCompleted);
            }
            this.InvokeAsync("LecturerIdNumberExist", new object[] {
                        sesId,
                        idNumber}, this.LecturerIdNumberExistOperationCompleted, userState);
        }
        
        private void OnLecturerIdNumberExistOperationCompleted(object arg) {
            if ((this.LecturerIdNumberExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LecturerIdNumberExistCompleted(this, new LecturerIdNumberExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCollegeLogo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCollegeLogo(string sesId) {
            object[] results = this.Invoke("GetCollegeLogo", new object[] {
                        sesId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCollegeLogoAsync(string sesId) {
            this.GetCollegeLogoAsync(sesId, null);
        }
        
        /// <remarks/>
        public void GetCollegeLogoAsync(string sesId, object userState) {
            if ((this.GetCollegeLogoOperationCompleted == null)) {
                this.GetCollegeLogoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCollegeLogoOperationCompleted);
            }
            this.InvokeAsync("GetCollegeLogo", new object[] {
                        sesId}, this.GetCollegeLogoOperationCompleted, userState);
        }
        
        private void OnGetCollegeLogoOperationCompleted(object arg) {
            if ((this.GetCollegeLogoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCollegeLogoCompleted(this, new GetCollegeLogoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidIdNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ValidIdNumber(string idNumber) {
            object[] results = this.Invoke("ValidIdNumber", new object[] {
                        idNumber});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ValidIdNumberAsync(string idNumber) {
            this.ValidIdNumberAsync(idNumber, null);
        }
        
        /// <remarks/>
        public void ValidIdNumberAsync(string idNumber, object userState) {
            if ((this.ValidIdNumberOperationCompleted == null)) {
                this.ValidIdNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidIdNumberOperationCompleted);
            }
            this.InvokeAsync("ValidIdNumber", new object[] {
                        idNumber}, this.ValidIdNumberOperationCompleted, userState);
        }
        
        private void OnValidIdNumberOperationCompleted(object arg) {
            if ((this.ValidIdNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidIdNumberCompleted(this, new ValidIdNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStudentsName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetStudentsName(string sesId, string idNumber) {
            object[] results = this.Invoke("GetStudentsName", new object[] {
                        sesId,
                        idNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStudentsNameAsync(string sesId, string idNumber) {
            this.GetStudentsNameAsync(sesId, idNumber, null);
        }
        
        /// <remarks/>
        public void GetStudentsNameAsync(string sesId, string idNumber, object userState) {
            if ((this.GetStudentsNameOperationCompleted == null)) {
                this.GetStudentsNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStudentsNameOperationCompleted);
            }
            this.InvokeAsync("GetStudentsName", new object[] {
                        sesId,
                        idNumber}, this.GetStudentsNameOperationCompleted, userState);
        }
        
        private void OnGetStudentsNameOperationCompleted(object arg) {
            if ((this.GetStudentsNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStudentsNameCompleted(this, new GetStudentsNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStudentsTimeTable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StudentLessons[] GetStudentsTimeTable(string sesId, string idNumber, System.DateTime fromDate, System.DateTime toDate) {
            object[] results = this.Invoke("GetStudentsTimeTable", new object[] {
                        sesId,
                        idNumber,
                        fromDate,
                        toDate});
            return ((StudentLessons[])(results[0]));
        }
        
        /// <remarks/>
        public void GetStudentsTimeTableAsync(string sesId, string idNumber, System.DateTime fromDate, System.DateTime toDate) {
            this.GetStudentsTimeTableAsync(sesId, idNumber, fromDate, toDate, null);
        }
        
        /// <remarks/>
        public void GetStudentsTimeTableAsync(string sesId, string idNumber, System.DateTime fromDate, System.DateTime toDate, object userState) {
            if ((this.GetStudentsTimeTableOperationCompleted == null)) {
                this.GetStudentsTimeTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStudentsTimeTableOperationCompleted);
            }
            this.InvokeAsync("GetStudentsTimeTable", new object[] {
                        sesId,
                        idNumber,
                        fromDate,
                        toDate}, this.GetStudentsTimeTableOperationCompleted, userState);
        }
        
        private void OnGetStudentsTimeTableOperationCompleted(object arg) {
            if ((this.GetStudentsTimeTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStudentsTimeTableCompleted(this, new GetStudentsTimeTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLecturerName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLecturerName(string sesId, string idNumber) {
            object[] results = this.Invoke("GetLecturerName", new object[] {
                        sesId,
                        idNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLecturerNameAsync(string sesId, string idNumber) {
            this.GetLecturerNameAsync(sesId, idNumber, null);
        }
        
        /// <remarks/>
        public void GetLecturerNameAsync(string sesId, string idNumber, object userState) {
            if ((this.GetLecturerNameOperationCompleted == null)) {
                this.GetLecturerNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLecturerNameOperationCompleted);
            }
            this.InvokeAsync("GetLecturerName", new object[] {
                        sesId,
                        idNumber}, this.GetLecturerNameOperationCompleted, userState);
        }
        
        private void OnGetLecturerNameOperationCompleted(object arg) {
            if ((this.GetLecturerNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLecturerNameCompleted(this, new GetLecturerNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLecturerTimeTable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LecturerLessons[] GetLecturerTimeTable(string sesId, string idNumber, System.DateTime fromDate, System.DateTime toDate) {
            object[] results = this.Invoke("GetLecturerTimeTable", new object[] {
                        sesId,
                        idNumber,
                        fromDate,
                        toDate});
            return ((LecturerLessons[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLecturerTimeTableAsync(string sesId, string idNumber, System.DateTime fromDate, System.DateTime toDate) {
            this.GetLecturerTimeTableAsync(sesId, idNumber, fromDate, toDate, null);
        }
        
        /// <remarks/>
        public void GetLecturerTimeTableAsync(string sesId, string idNumber, System.DateTime fromDate, System.DateTime toDate, object userState) {
            if ((this.GetLecturerTimeTableOperationCompleted == null)) {
                this.GetLecturerTimeTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLecturerTimeTableOperationCompleted);
            }
            this.InvokeAsync("GetLecturerTimeTable", new object[] {
                        sesId,
                        idNumber,
                        fromDate,
                        toDate}, this.GetLecturerTimeTableOperationCompleted, userState);
        }
        
        private void OnGetLecturerTimeTableOperationCompleted(object arg) {
            if ((this.GetLecturerTimeTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLecturerTimeTableCompleted(this, new GetLecturerTimeTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStudentsInLesson", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StudentInLesson[] GetStudentsInLesson(string sesId, string CourseNo, int lessonNo, System.DateTime lessonDate) {
            object[] results = this.Invoke("GetStudentsInLesson", new object[] {
                        sesId,
                        CourseNo,
                        lessonNo,
                        lessonDate});
            return ((StudentInLesson[])(results[0]));
        }
        
        /// <remarks/>
        public void GetStudentsInLessonAsync(string sesId, string CourseNo, int lessonNo, System.DateTime lessonDate) {
            this.GetStudentsInLessonAsync(sesId, CourseNo, lessonNo, lessonDate, null);
        }
        
        /// <remarks/>
        public void GetStudentsInLessonAsync(string sesId, string CourseNo, int lessonNo, System.DateTime lessonDate, object userState) {
            if ((this.GetStudentsInLessonOperationCompleted == null)) {
                this.GetStudentsInLessonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStudentsInLessonOperationCompleted);
            }
            this.InvokeAsync("GetStudentsInLesson", new object[] {
                        sesId,
                        CourseNo,
                        lessonNo,
                        lessonDate}, this.GetStudentsInLessonOperationCompleted, userState);
        }
        
        private void OnGetStudentsInLessonOperationCompleted(object arg) {
            if ((this.GetStudentsInLessonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStudentsInLessonCompleted(this, new GetStudentsInLessonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveStudentAttend", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveStudentAttend(string sesId, string idNumber, string courseNo, int lessonNo) {
            object[] results = this.Invoke("SaveStudentAttend", new object[] {
                        sesId,
                        idNumber,
                        courseNo,
                        lessonNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveStudentAttendAsync(string sesId, string idNumber, string courseNo, int lessonNo) {
            this.SaveStudentAttendAsync(sesId, idNumber, courseNo, lessonNo, null);
        }
        
        /// <remarks/>
        public void SaveStudentAttendAsync(string sesId, string idNumber, string courseNo, int lessonNo, object userState) {
            if ((this.SaveStudentAttendOperationCompleted == null)) {
                this.SaveStudentAttendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveStudentAttendOperationCompleted);
            }
            this.InvokeAsync("SaveStudentAttend", new object[] {
                        sesId,
                        idNumber,
                        courseNo,
                        lessonNo}, this.SaveStudentAttendOperationCompleted, userState);
        }
        
        private void OnSaveStudentAttendOperationCompleted(object arg) {
            if ((this.SaveStudentAttendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveStudentAttendCompleted(this, new SaveStudentAttendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DelStudentAttend", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DelStudentAttend(string sesId, string idNumber, string courseNo, int lessonNo) {
            object[] results = this.Invoke("DelStudentAttend", new object[] {
                        sesId,
                        idNumber,
                        courseNo,
                        lessonNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DelStudentAttendAsync(string sesId, string idNumber, string courseNo, int lessonNo) {
            this.DelStudentAttendAsync(sesId, idNumber, courseNo, lessonNo, null);
        }
        
        /// <remarks/>
        public void DelStudentAttendAsync(string sesId, string idNumber, string courseNo, int lessonNo, object userState) {
            if ((this.DelStudentAttendOperationCompleted == null)) {
                this.DelStudentAttendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelStudentAttendOperationCompleted);
            }
            this.InvokeAsync("DelStudentAttend", new object[] {
                        sesId,
                        idNumber,
                        courseNo,
                        lessonNo}, this.DelStudentAttendOperationCompleted, userState);
        }
        
        private void OnDelStudentAttendOperationCompleted(object arg) {
            if ((this.DelStudentAttendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelStudentAttendCompleted(this, new DelStudentAttendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveStudentHealthStatement", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long SaveStudentHealthStatement(string sesId, string idNumber, System.DateTime statmentDate) {
            object[] results = this.Invoke("SaveStudentHealthStatement", new object[] {
                        sesId,
                        idNumber,
                        statmentDate});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void SaveStudentHealthStatementAsync(string sesId, string idNumber, System.DateTime statmentDate) {
            this.SaveStudentHealthStatementAsync(sesId, idNumber, statmentDate, null);
        }
        
        /// <remarks/>
        public void SaveStudentHealthStatementAsync(string sesId, string idNumber, System.DateTime statmentDate, object userState) {
            if ((this.SaveStudentHealthStatementOperationCompleted == null)) {
                this.SaveStudentHealthStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveStudentHealthStatementOperationCompleted);
            }
            this.InvokeAsync("SaveStudentHealthStatement", new object[] {
                        sesId,
                        idNumber,
                        statmentDate}, this.SaveStudentHealthStatementOperationCompleted, userState);
        }
        
        private void OnSaveStudentHealthStatementOperationCompleted(object arg) {
            if ((this.SaveStudentHealthStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveStudentHealthStatementCompleted(this, new SaveStudentHealthStatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StudentHasHealthStatement", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool StudentHasHealthStatement(string sesId, string idNumber, System.DateTime statmentDate) {
            object[] results = this.Invoke("StudentHasHealthStatement", new object[] {
                        sesId,
                        idNumber,
                        statmentDate});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void StudentHasHealthStatementAsync(string sesId, string idNumber, System.DateTime statmentDate) {
            this.StudentHasHealthStatementAsync(sesId, idNumber, statmentDate, null);
        }
        
        /// <remarks/>
        public void StudentHasHealthStatementAsync(string sesId, string idNumber, System.DateTime statmentDate, object userState) {
            if ((this.StudentHasHealthStatementOperationCompleted == null)) {
                this.StudentHasHealthStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStudentHasHealthStatementOperationCompleted);
            }
            this.InvokeAsync("StudentHasHealthStatement", new object[] {
                        sesId,
                        idNumber,
                        statmentDate}, this.StudentHasHealthStatementOperationCompleted, userState);
        }
        
        private void OnStudentHasHealthStatementOperationCompleted(object arg) {
            if ((this.StudentHasHealthStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StudentHasHealthStatementCompleted(this, new StudentHasHealthStatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveLecturerHealthStatement", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long SaveLecturerHealthStatement(string sesId, string idNumber, System.DateTime statmentDate) {
            object[] results = this.Invoke("SaveLecturerHealthStatement", new object[] {
                        sesId,
                        idNumber,
                        statmentDate});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void SaveLecturerHealthStatementAsync(string sesId, string idNumber, System.DateTime statmentDate) {
            this.SaveLecturerHealthStatementAsync(sesId, idNumber, statmentDate, null);
        }
        
        /// <remarks/>
        public void SaveLecturerHealthStatementAsync(string sesId, string idNumber, System.DateTime statmentDate, object userState) {
            if ((this.SaveLecturerHealthStatementOperationCompleted == null)) {
                this.SaveLecturerHealthStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveLecturerHealthStatementOperationCompleted);
            }
            this.InvokeAsync("SaveLecturerHealthStatement", new object[] {
                        sesId,
                        idNumber,
                        statmentDate}, this.SaveLecturerHealthStatementOperationCompleted, userState);
        }
        
        private void OnSaveLecturerHealthStatementOperationCompleted(object arg) {
            if ((this.SaveLecturerHealthStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveLecturerHealthStatementCompleted(this, new SaveLecturerHealthStatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LecturerHasHealthStatement", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool LecturerHasHealthStatement(string sesId, string idNumber, System.DateTime statmentDate) {
            object[] results = this.Invoke("LecturerHasHealthStatement", new object[] {
                        sesId,
                        idNumber,
                        statmentDate});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void LecturerHasHealthStatementAsync(string sesId, string idNumber, System.DateTime statmentDate) {
            this.LecturerHasHealthStatementAsync(sesId, idNumber, statmentDate, null);
        }
        
        /// <remarks/>
        public void LecturerHasHealthStatementAsync(string sesId, string idNumber, System.DateTime statmentDate, object userState) {
            if ((this.LecturerHasHealthStatementOperationCompleted == null)) {
                this.LecturerHasHealthStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLecturerHasHealthStatementOperationCompleted);
            }
            this.InvokeAsync("LecturerHasHealthStatement", new object[] {
                        sesId,
                        idNumber,
                        statmentDate}, this.LecturerHasHealthStatementOperationCompleted, userState);
        }
        
        private void OnLecturerHasHealthStatementOperationCompleted(object arg) {
            if ((this.LecturerHasHealthStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LecturerHasHealthStatementCompleted(this, new LecturerHasHealthStatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class StudentLessons {
        
        private System.DateTime lessonDateField;
        
        private string lessonDayInWeekField;
        
        private string lessonStartField;
        
        private string lessonEndField;
        
        private string lessonSubjectField;
        
        private string lessonLecturerNameField;
        
        private string lessonRemField;
        
        private string lessonRoomField;
        
        private string lessonBranchNameField;
        
        /// <remarks/>
        public System.DateTime lessonDate {
            get {
                return this.lessonDateField;
            }
            set {
                this.lessonDateField = value;
            }
        }
        
        /// <remarks/>
        public string lessonDayInWeek {
            get {
                return this.lessonDayInWeekField;
            }
            set {
                this.lessonDayInWeekField = value;
            }
        }
        
        /// <remarks/>
        public string lessonStart {
            get {
                return this.lessonStartField;
            }
            set {
                this.lessonStartField = value;
            }
        }
        
        /// <remarks/>
        public string lessonEnd {
            get {
                return this.lessonEndField;
            }
            set {
                this.lessonEndField = value;
            }
        }
        
        /// <remarks/>
        public string lessonSubject {
            get {
                return this.lessonSubjectField;
            }
            set {
                this.lessonSubjectField = value;
            }
        }
        
        /// <remarks/>
        public string lessonLecturerName {
            get {
                return this.lessonLecturerNameField;
            }
            set {
                this.lessonLecturerNameField = value;
            }
        }
        
        /// <remarks/>
        public string lessonRem {
            get {
                return this.lessonRemField;
            }
            set {
                this.lessonRemField = value;
            }
        }
        
        /// <remarks/>
        public string lessonRoom {
            get {
                return this.lessonRoomField;
            }
            set {
                this.lessonRoomField = value;
            }
        }
        
        /// <remarks/>
        public string lessonBranchName {
            get {
                return this.lessonBranchNameField;
            }
            set {
                this.lessonBranchNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class StudentInLesson {
        
        private long idNumberField;
        
        private string studentNameField;
        
        private string studentMobileField;
        
        private bool healthStatementField;
        
        private bool attendedField;
        
        /// <remarks/>
        public long idNumber {
            get {
                return this.idNumberField;
            }
            set {
                this.idNumberField = value;
            }
        }
        
        /// <remarks/>
        public string studentName {
            get {
                return this.studentNameField;
            }
            set {
                this.studentNameField = value;
            }
        }
        
        /// <remarks/>
        public string studentMobile {
            get {
                return this.studentMobileField;
            }
            set {
                this.studentMobileField = value;
            }
        }
        
        /// <remarks/>
        public bool healthStatement {
            get {
                return this.healthStatementField;
            }
            set {
                this.healthStatementField = value;
            }
        }
        
        /// <remarks/>
        public bool Attended {
            get {
                return this.attendedField;
            }
            set {
                this.attendedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class LecturerLessons {
        
        private System.DateTime lessonDateField;
        
        private string lessonDayInWeekField;
        
        private string lessonStartField;
        
        private string lessonEndField;
        
        private string lessonSubjectField;
        
        private string lessonRemField;
        
        private string lessonRoomField;
        
        private string lessonBranchNameField;
        
        private string lessonCourseNoField;
        
        private int lessonNoField;
        
        /// <remarks/>
        public System.DateTime lessonDate {
            get {
                return this.lessonDateField;
            }
            set {
                this.lessonDateField = value;
            }
        }
        
        /// <remarks/>
        public string lessonDayInWeek {
            get {
                return this.lessonDayInWeekField;
            }
            set {
                this.lessonDayInWeekField = value;
            }
        }
        
        /// <remarks/>
        public string lessonStart {
            get {
                return this.lessonStartField;
            }
            set {
                this.lessonStartField = value;
            }
        }
        
        /// <remarks/>
        public string lessonEnd {
            get {
                return this.lessonEndField;
            }
            set {
                this.lessonEndField = value;
            }
        }
        
        /// <remarks/>
        public string lessonSubject {
            get {
                return this.lessonSubjectField;
            }
            set {
                this.lessonSubjectField = value;
            }
        }
        
        /// <remarks/>
        public string lessonRem {
            get {
                return this.lessonRemField;
            }
            set {
                this.lessonRemField = value;
            }
        }
        
        /// <remarks/>
        public string lessonRoom {
            get {
                return this.lessonRoomField;
            }
            set {
                this.lessonRoomField = value;
            }
        }
        
        /// <remarks/>
        public string lessonBranchName {
            get {
                return this.lessonBranchNameField;
            }
            set {
                this.lessonBranchNameField = value;
            }
        }
        
        /// <remarks/>
        public string lessonCourseNo {
            get {
                return this.lessonCourseNoField;
            }
            set {
                this.lessonCourseNoField = value;
            }
        }
        
        /// <remarks/>
        public int lessonNo {
            get {
                return this.lessonNoField;
            }
            set {
                this.lessonNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetSessionIdCompletedEventHandler(object sender, GetSessionIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSessionIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSessionIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void Send_Sms_msgCompletedEventHandler(object sender, Send_Sms_msgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Send_Sms_msgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Send_Sms_msgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetStudentMobileByIdCompletedEventHandler(object sender, GetStudentMobileByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStudentMobileByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStudentMobileByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void StudentIdNumberExistCompletedEventHandler(object sender, StudentIdNumberExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StudentIdNumberExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StudentIdNumberExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetLecturerMobileByIdCompletedEventHandler(object sender, GetLecturerMobileByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLecturerMobileByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLecturerMobileByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LecturerIdNumberExistCompletedEventHandler(object sender, LecturerIdNumberExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LecturerIdNumberExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LecturerIdNumberExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetCollegeLogoCompletedEventHandler(object sender, GetCollegeLogoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCollegeLogoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCollegeLogoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ValidIdNumberCompletedEventHandler(object sender, ValidIdNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidIdNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidIdNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetStudentsNameCompletedEventHandler(object sender, GetStudentsNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStudentsNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStudentsNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetStudentsTimeTableCompletedEventHandler(object sender, GetStudentsTimeTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStudentsTimeTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStudentsTimeTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StudentLessons[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StudentLessons[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetLecturerNameCompletedEventHandler(object sender, GetLecturerNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLecturerNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLecturerNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetLecturerTimeTableCompletedEventHandler(object sender, GetLecturerTimeTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLecturerTimeTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLecturerTimeTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LecturerLessons[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LecturerLessons[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetStudentsInLessonCompletedEventHandler(object sender, GetStudentsInLessonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStudentsInLessonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStudentsInLessonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StudentInLesson[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StudentInLesson[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SaveStudentAttendCompletedEventHandler(object sender, SaveStudentAttendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveStudentAttendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveStudentAttendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DelStudentAttendCompletedEventHandler(object sender, DelStudentAttendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelStudentAttendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelStudentAttendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SaveStudentHealthStatementCompletedEventHandler(object sender, SaveStudentHealthStatementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveStudentHealthStatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveStudentHealthStatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void StudentHasHealthStatementCompletedEventHandler(object sender, StudentHasHealthStatementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StudentHasHealthStatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StudentHasHealthStatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SaveLecturerHealthStatementCompletedEventHandler(object sender, SaveLecturerHealthStatementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveLecturerHealthStatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveLecturerHealthStatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LecturerHasHealthStatementCompletedEventHandler(object sender, LecturerHasHealthStatementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LecturerHasHealthStatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LecturerHasHealthStatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591